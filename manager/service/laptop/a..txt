// package laptopservice_test

// import (
// 	"context"
// 	"fmt"
// 	"github.com/stretchr/testify/require"
// 	"go.mongodb.org/mongo-driver/mongo"
// 	"google.golang.org/grpc"
// 	database "manager/database"
// 	laptop "manager/pb"
// 	"manager/sample"
// 	"manager/service/laptopService"
// 	"testing"
// )

// var port = 27017
// var uri = "mongodb://localhost:27017"
// var dbName = "mircoservices"
// var dbPassword = "Kushal123"

// func TestClientCreateLaptop(t *testing.T) {
// 	t.Parallel()

// testCases:=[]struct{

// 	}

// 	laptopserver,serverAddr :=startTestLaptopServer(t)
// 	laptopClient:= startGrpcClient(t,serverAddr)
// }

// func startGrpcClient(t *testing.T,serverAddr string){
// 	conn,err := grpc.Dial(serverAddr,grpc.WithInsecure())
// 	require.NoError(t,err)

// 	return &laptop.NewLaptopServiceClient(conn)
// }

// func startTestLaptopServer(t *testing.T) (*laptopservice.LaptopServer, string) {
// 	db, err := initializeDatabase(t)
// 	if err != nil {
// 		panic(err)
// 	}

// 	laptopStore := laptopservice.NewLaptopStore(db)
// 	laptopServer := laptopservice.NewLaptopService(laptopStore, nil)

// 	server, err := main.NewServer(8081)
// 	listener, err := server.StartServer()

// 	// Initializes new grpc server.
// 	grpcServer := grpc.NewServer()

// 	// Register laptop server to grpc server.
// 	laptop.RegisterLaptopServiceServer(grpcServer, laptopServer)

// 	go  grpcServer.Serve(listener)

// 	return laptopServer,listener.Addr().String
// }

// func initializeDatabase(t *testing.T) (*mongo.Database, error) {
// 	monogDB := database.New(port, uri, dbName, dbPassword)
// 	dbClient, err := monogDB.CreateClient()
// 	if err != nil {
// 		return nil, err
// 	}

// 	db := monogDB.InitializeDatabase(dbClient)

// 	return db, nil
// }
